---

    - shell:
        cmd: date +%H:%M
      register: time

    - name: Set directory variables
      set_fact:
        backup_directory: "{{ playbook_dir }}/checks/backup_directory"
        config: "{{ playbook_dir }}/roles/ipv6/config"

    - name: Create directory to store back up configuration
      file: 
        path: "{{ backup_directory }}"
        state: directory

    - name: Copying Running Configuration
      cli_command:
       command: show running-config
      register: pre_running_conf
    - copy:
       content: "{{ pre_running_conf.stdout[0] }}"
       dest: "{{ backup_directory }}/{{ time }}_{{ inventory_hostname }}_pre_running_config.txt"

    - name: Check IPv6 VRF config doesn't exist
      cli_command:
        command: "show vrf ipv6"
      register: vrf
    - assert:
        that:
          - "'' in item.stdout"
        success_msg: "No VRF Configuration exists. Continue"
        fail_msg: "Configuration already in place"
      with_items:
        - "{{ vrf.results }}"
      ignore_errors: True

    - name: Deploy VRF Configuration
      cli_config:
        config: "{{ lookup('file', '{{ config }}/{{ inventory_hostname }}/1_vrf.txt') }}"
        commit: yes

    - name: Check VRF Config
      cli_command:
        command: "show vrf ipv6"
      register: vrf_post
    - assert:
        that:
          - "'BBONEDEFAULT' in item.stdout"
        success_msg: "VRF Configuration exists. Continue"
        fail_msg: "Configuration not deployed"
      with_items:
        - "{{ vrf_post.results }}"
      ignore_errors: True


    - name: Deploy Interface Configuration
      cli_config:
        config: "{{ lookup('file', '{{ config }}/{{ inventory_hostname }}/2_interface.txt') }}"
        commit: yes

    - name: Pre-check pool configuration
      cli_command:
        command: "show ipv6 local pool"
      register: pool_pre
    - assert:
        that:
          - "'' in pool_pre.stdout"
        success_msg: "IPv6 pool not deployed. Continue"
        fail_msg: "IPv6 pool present."
      ignore_errors: True

    - name: Pre-check prefix-list configuration
      cli_command:
        command: "show ipv6 prefix-list"
      register: prefix_pre
    - assert:
        that:
          - "'' in prefix_pre.stdout"
        success_msg: "IPv6 Prefix-List deployed. Continue"
        fail_msg: "IPv6 prefix list present."
      ignore_errors: True

    - name: Deploy Prefix Configuration
      cli_config:
        config: "{{ lookup('file', '{{ config }}/{{ inventory_hostname }}/3_prefix.txt') }}"
        commit: yes

    - name: Post-check pool configuration
      cli_command:
        command: "show ipv6 local pool"
      register: pool_post
    - assert:
        that:
          - "'bb1-ipv6-pool' in pool_post.stdout"
        success_msg: "IPv6 Pool deployed. Continue"
        fail_msg: "IPv6 Pool not present."
      ignore_errors: True

    - name: Post-check prefix-list configuration
      cli_command:
        command: "show ipv6 prefix-list"
      register: prefix_post
    - assert:
        that:
          - "'ipv6 prefix-list V6_BB1_LAR_OUTBOUND: 3 entries' in prefix_post.stdout"
        success_msg: "IPv6 Prefix-List deployed. Continue"
        fail_msg: "IPv6 prefix list present."
      ignore_errors: True

    - name: Pre-check BGP configuration
      cli_command:
        command: "show running-config | i address family ipv6 vrf BBONEDEFAULT"
      register: bgp_pre
    - assert:
        that:
          - "'address-family ipv6 vrf BBONEDEFAULT' not in bgp_pre.stdout"
        success_msg: "IPv6 BGP not deployed. Continue"
        fail_msg: "IPv6 BGP already deployed."
      ignore_errors: True

    - name: Deploy BGP Configuation
      cli_config:
        config: "{{ lookup('file', '{{ config }}/{{ inventory_hostname }}/4_bgp.txt') }}"
        commit: yes

    - name: Post-check BGP configuration
      cli_command:
        command: "show running-config | i address family ipv6 vrf BBONEDEFAULT"
      register: bgp_post
    - assert:
        that:
          - "'address-family ipv6 vrf BBONEDEFAULT' in bgp_post.stdout"
        success_msg: "IPv6 BGP deployed. Continue"
        fail_msg: "IPv6 BGP not deployed."
      ignore_errors: True    

    - name: Pre-check OSPF configuration
      cli_command:
        command: "show ospfv3 ipv6 vrf BBONEDEFAULT"
      register: ospf_pre
    - assert:
        that:
          - "'' in ospf_pre.stdout"
        success_msg: "OSPFv3 not deployed. Continue"
        fail_msg: "OSPFv3 already deployed."
      ignore_errors: True

    - name: Deploy OSPF Configuration
      cli_config:
        config: "{{ lookup('file', '{{ config }}/{{ inventory_hostname }}/5_ospf.txt') }}"
        commit: yes

    - name: Post-check OSPF configuration
      cli_command:
        command: "show ospfv3 ipv6 vrf BBONEDEFAULT"
      register: ospf_post
    - assert:
        that:
          - "'OSPFv3 1100 address-family ipv6 vrf BBONEDEFAULT' in ospf_post.stdout"
        success_msg: "OSPFv3 deployed. Continue"
        fail_msg: "OSPFv3 not deployed."
      ignore_errors: True

    - name: Copying Running Configuration
      cli_command:
       command: show running-config
      register: post_running_conf
    - copy:
       content: "{{ post_running_conf.stdout[0] }}"
       dest: "{{ backup_directory }}/{{ time }}_{{ inventory_hostname }}_Post_Running_Config.txt"

